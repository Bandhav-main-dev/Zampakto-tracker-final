[
  {
    "name": "Shinjitsu Tenshō",
    "kanji": "真実天衝",
    "domain": "AI / Machine Learning",
    "release_command": "Pierce reality… Shinjitsu Tenshō!",
    "power": "Unites APIs, semantic AI, and automation to build intelligent truth engines.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Learn Python basics", "Train a simple ML model", "Understand supervised learning"],
    "bankai_tasks": ["Build semantic search with FAISS + SBERT", "Use HuggingFace transformers", "Deploy ML model using Streamlit"],
    "dangai_tasks": ["Design an AI Lawyer app", "Integrate OpenAI API", "Blog on advanced ML applications"],
    "shikai_test_question": ["What is supervised learning?", "Define overfitting."],
    "bankai_test_question": ["Explain vector similarity in semantic search.", "How does BERT model understand context?"],
    "dangai_test_question": ["Outline an AI architecture using FAISS + Flask.", "What are the risks of generative AI in law?"],
    "practise_test_question": ["Difference between precision and recall?", "When to use logistic regression over SVM?"],
    "notes": "Focus on semantic AI, model deployment, and automation."
  },
  {
    "name": "Kōddo Rinkai",
    "kanji": "コード臨界",
    "domain": "Full-Stack Engineering",
    "release_command": "Ignite the devnet… Kōddo Rinkai!",
    "power": "Generates scalable UIs, connects databases, and automates deploys.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Build a basic Flask app", "Create a REST API", "Learn HTML/CSS basics"],
    "bankai_tasks": ["Build full-stack app with React + Flask", "Connect PostgreSQL and deploy", "Add JWT Auth to app"],
    "dangai_tasks": ["CI/CD with GitHub Actions", "Dockerize full project", "Set up domain on Render or Netlify"],
    "shikai_test_question": ["What is the role of a backend?", "What does REST mean?"],
    "bankai_test_question": ["Explain CRUD operations in REST.", "How do React hooks work?"],
    "dangai_test_question": ["Steps to deploy a full-stack app to the cloud?", "What is containerization and why is Docker used?"],
    "practise_test_question": ["What is CORS and how to fix it?", "Difference between SQL and NoSQL?"],
    "notes": "Master full-stack flow and deployment pipelines."
  },
  {
    "name": "Kikai Meiun",
    "kanji": "機械命運",
    "domain": "Automation / Tools",
    "release_command": "Flow into infinity… Kikai Meiun!",
    "power": "Creates bots, scripts, and background systems that automate complex workflows.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Write basic Python scripts", "Automate a file renaming task", "Use cron to run scheduled jobs"],
    "bankai_tasks": ["Build a CLI tool with argparse", "Use Selenium or Puppeteer", "Integrate with Slack or Telegram bot"],
    "dangai_tasks": ["Create a workflow system using Python + SQLite", "Build auto-report generator", "Chain tools using shell + Python"],
    "shikai_test_question": ["What is scripting?", "How does cron scheduling work?"],
    "bankai_test_question": ["Explain headless browser automation.", "What are common CLI tool use-cases?"],
    "dangai_test_question": ["Describe how to automate a weekly report system.", "Why is logging important in automation?"],
    "practise_test_question": ["What are daemon/background tasks?", "Use cases for watchdog or observer patterns?"],
    "notes": "Focus on tools that reduce human repetitive work."
  },
  {
    "name": "Gensō Kōzō",
    "kanji": "幻想構造",
    "domain": "Data Engineering",
    "release_command": "Shape the river of flow… Gensō Kōzō!",
    "power": "Extracts, transforms, and loads massive data into structured systems.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Understand CSV, JSON, and basic Pandas", "Clean messy datasets", "Use groupby and filtering"],
    "bankai_tasks": ["Build ETL pipeline in Python", "Write SQL queries for joins", "Use Apache Airflow basics"],
    "dangai_tasks": ["Stream large data using Spark or Dask", "Design a mini-data warehouse", "Automate ETL with Airflow + API"],
    "shikai_test_question": ["What is data cleaning?", "How does Pandas handle NaNs?"],
    "bankai_test_question": ["What is the difference between INNER and LEFT JOIN?", "How to automate ETL with Python?"],
    "dangai_test_question": ["Design a scalable data pipeline using Python and Spark.", "Explain DAG in Airflow."],
    "practise_test_question": ["What is schema in databases?", "Why normalization is important?"],
    "notes": "Prioritize efficient data pipelines and scalability."
  },
  {
    "name": "Meikō Jikan",
    "kanji": "冥光時間",
    "domain": "Time Management / Systems",
    "release_command": "Command the hours… Meikō Jikan!",
    "power": "Manages goals, schedules, and productivity in structured systems.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Track daily tasks using Notion", "Use Pomodoro timer", "Define weekly goals"],
    "bankai_tasks": ["Build your own planner using Flask", "Track habits in database", "Analyze time usage with charts"],
    "dangai_tasks": ["Integrate Google Calendar API", "Design system for work + break balance", "Train AI to prioritize tasks based on urgency"],
    "shikai_test_question": ["What is time blocking?", "Why do people procrastinate?"],
    "bankai_test_question": ["Design a basic planner schema.", "How to use habit tracking for productivity?"],
    "dangai_test_question": ["Describe an AI-powered time management assistant.", "How to automate prioritization of tasks?"],
    "practise_test_question": ["What is Eisenhower matrix?", "Difference between schedule and routine?"],
    "notes": "Focus on building real, automated systems for managing time."
  },
  {
    "name": "Sokumen Seigyō",
    "kanji": "側面制御",
    "domain": "Problem Solving / Logic",
    "release_command": "See all paths… Sokumen Seigyō!",
    "power": "Understands problems deeply, splits them, and finds optimal solutions.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Solve 5 Python logic puzzles", "Understand recursion and iteration", "Learn flowcharting basics"],
    "bankai_tasks": ["Design problem trees for real-world problems", "Implement dynamic programming problems", "Master 2 coding platforms like LeetCode or HackerRank"],
    "dangai_tasks": ["Create your own problem and 3 solutions", "Design a strategy for debugging in real-time", "Automate logic test cases for an app"],
    "shikai_test_question": ["What is recursion?", "Difference between loop and recursion?"],
    "bankai_test_question": ["How does memoization improve performance?", "Why is breaking problem important before coding?"],
    "dangai_test_question": ["Design a debugging assistant for logic errors.", "How to architect logic trees for planning?"],
    "practise_test_question": ["What is divide and conquer?", "Explain base case in recursion."],
    "notes": "Train logical clarity through patterns and problem breakdown."
  },
  {
    "name": "Gōkon Shisō",
    "kanji": "合魂思想",
    "domain": "AI Tool Integration",
    "release_command": "Fuse all minds… Gōkon Shisō!",
    "power": "Integrates multiple AI models & APIs into one hybrid power system.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Use OpenAI API to call a chatbot", "Chain GPT with Whisper (STT)", "Generate output from Gemini and compare"],
    "bankai_tasks": ["Integrate 3 tools (e.g. Gemini + Whisper + LangChain)", "Create app that takes voice input & gives AI output", "Build custom AI interface using Flask"],
    "dangai_tasks": ["Design a hybrid model with multiple API calls", "Optimize latency for response", "Write doc for integrated AI workflow"],
    "shikai_test_question": ["What is prompt chaining?", "Difference between Whisper and Gemini?"],
    "bankai_test_question": ["How to manage multiple API outputs?", "Explain hybrid AI systems."],
    "dangai_test_question": ["Design a full AI stack for an interactive assistant.", "How to log and trace cross-tool workflows?"],
    "practise_test_question": ["What are limitations of tool chaining?", "How to choose right model per task?"],
    "notes": "Merge APIs to create smooth intelligent tools."
  },
  {
    "name": "Kagami Ryōiki",
    "kanji": "鏡領域",
    "domain": "Cloud + Data Science",
    "release_command": "Reflect the real… Kagami Ryōiki!",
    "power": "Builds scalable models and deploys them across cloud services.",
    "shikai_unlocked": false,
    "bankai_unlocked": false,
    "dangai_unlocked": false,
    "shikai_progress": 0,
    "bankai_progress": 0,
    "dangai_progress": 0,
    "shikai_tasks": ["Train a data model with scikit-learn", "Use Colab for GPU training", "Understand basic cloud terms"],
    "bankai_tasks": ["Deploy model on Render or HuggingFace", "Use Firebase or PostgreSQL in cloud", "Create API endpoint for prediction"],
    "dangai_tasks": ["Set up scalable cloud infra with Docker", "Auto-update model on cloud", "Add monitoring and logging tools"],
    "shikai_test_question": ["What is overfitting?", "Difference between CPU and GPU for ML?"],
    "bankai_test_question": ["Steps to deploy model in cloud?", "What is a model endpoint?"],
    "dangai_test_question": ["Design auto-scaling ML app in cloud.", "Explain docker-compose for ML project."],
    "practise_test_question": ["What is latency?", "What tools monitor cloud performance?"],
    "notes": "Think scale and automation. Deploy your intelligence."
  }
]
